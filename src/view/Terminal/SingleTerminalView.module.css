.terminal > div {
  /* Need to use important to override inline style in 3rd party
  component */
  overflow-y: scroll !important;
}

.outerTerminalWrapper {
  /* Prevent default white outline from showing on the terminal. Only really applicable if terminal
  is focusable, but no harm applying this to unfocusable terminals also */
  outline: none;
}

/* Make the outer Terminal div glow when either it's hovered over OR
it is focused. This makes it obvious to the user that they have clicked/selected
it */
.focusable.outerTerminalWrapper:hover, .focusable.outerTerminalWrapper:focus-within {
  box-shadow: 0px 0px 10px 0px #de3545; /* Give a box shadow when focused or hovered */
}

/* When the Terminal is focused, show the cursor as a solid blinking rectangle */
.cursorFocused {
  -webkit-animation: blinkFocused 0.8s infinite;
  animation: blinkFocused 0.8s infinite;
  /* This white-space is needed to be set like this so the cursor displays correctly,
  otherwise you just get a vertical line at the start of the char. Not sure
  why it's needed?!? */
  white-space: break-spaces;
}

@keyframes blinkFocused {
  0% {
    background-color: #222;
  }
  50% {
    background-color: white;
  }
  100% {
    background-color: #222;
  }
}

/* When the Terminal is unfocused, show the cursor as just a blinking outline */
.cursorUnfocused {
  -webkit-animation: blinkunfocused 0.8s infinite;
  animation: blinkunfocused 0.8s infinite;

  /* To prevent the cursor border from being clipped, we use outline-
  instead of border- and also use outline-offset */
  outline-width: 1px;
  outline-style: solid;
  outline-offset: -1px;

  /* This white-space is needed to be set like this so the cursor displays correctly,
  otherwise you just get a vertical line at the start of the char. Not sure
  why it's needed?!? */
  white-space: break-spaces;
}

@keyframes blinkunfocused {
  0% {
    outline-color: #222;
  }
  50% {
    outline-color: white;
  }
  100% {
    outline-color: #222;
  }
}

@font-face {
  font-family: testFont;
  src: url(../../fonts/ConsolasControlChars-Regular.woff2);
}

/* This is to prevent text with spaces in it from wrapping when the terminal pane width shrinks
smaller than the width of the rows. The fixedSizeList class is applied to the FixedSizeList React
component. Two divs down is the div's which make up each row in the Terminal, and contain the spans
which contain the text */
.fixedSizeList div div {
  white-space: nowrap;
  font-family: testFont, Consolas, monospace;
  /* font-family: Consolas, monospace; */
}


