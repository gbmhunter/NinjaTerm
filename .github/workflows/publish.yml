name: Publish

on:
  push:
    branches:
      # Merge develop into the staging branch to publish build artifacts to a
      # draft release in GitHub.
      - staging

jobs:
  publish:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # os: [macos-latest]
        # Because we compile native modules (e.g. serialport), I couldn't get all
        # executables to be built on macOS. Use each OS to build it's
        # respective executable
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Install Node and NPM
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install and build
        run: |
          npm install
          npm run postinstall
          # npm run build
          # Use the following line instead if you want developer tools in the production app
          npx cross-env DEBUG_PROD=true npm run build

      - name: Publish releases
        env:
          # These values are used for auto updates signing
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_ID_PASS }}
          # CSC_LINK: ${{ secrets.CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Because we compile native modules (e.g. serialport), I couldn't get all
        # executables to be built on macOS. Use each OS to build it's
        # respective executable
        run: |
          # npm exec electron-builder -- --publish always --win --mac --linux
          # npm exec electron-builder -- --publish always --win
            if [ "$RUNNER_OS" == "Linux" ]; then
                npm exec electron-builder -- --publish always --linux
            elif [ "$RUNNER_OS" == "Windows" ]; then
                npm exec electron-builder -- --publish always --win
            elif [ "$RUNNER_OS" == "macOS" ]; then
                npm exec electron-builder -- --publish always --mac
            else
                  echo "$RUNNER_OS not supported"
                  exit 1
            fi
        shell: bash
